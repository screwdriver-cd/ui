import { resolve } from 'rsvp';
import EmberObject from '@ember/object';

const scms = [
  {
    context: 'github:github.com',
    displayName: 'github.com',
    iconType: 'github',
    isSignedIn: true
  },
  {
    context: 'bitbucket:bitbucket.org',
    displayName: 'bitbucket.org',
    iconType: 'bitbucket',
    isSignedIn: false
  }
];

/**
 * Inject scm service to an Ember Object
 * @param {Object}    self      - Ember object generated by ember-qunit moduleFor()
 * @param {Boolean}   oldFormat - Denotes if test is following old RFC
 */
export default function injectScmServiceStub(self, oldFormat = true) {
  const scmServiceStub = EmberObject.extend({
    createScms() {
      return resolve(scms);
    },
    getScms() {
      return scms;
    },
    getScm(scmContext) {
      return this.getScms().find(scm => scm.context === scmContext);
    }
  });

  if (oldFormat) {
    self.register('service:scm', scmServiceStub);
    self.inject.service('scm');
  } else {
    self.owner.register('service:scm', scmServiceStub);
  }
}
